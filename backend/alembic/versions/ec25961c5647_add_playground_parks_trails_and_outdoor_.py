"""Add playground, parks, trails and outdoor features

Revision ID: ec25961c5647
Revises: f24b3f3ceff3
Create Date: 2025-08-19 00:11:14.569846

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec25961c5647'
down_revision = 'f24b3f3ceff3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('points_of_interest', sa.Column('playground_available', sa.Boolean(), nullable=True))
    op.add_column('points_of_interest', sa.Column('playground_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('playground_surface_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('playground_notes', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('playground_photos', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('playground_location', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('payphone_location', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('night_sky_viewing', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('natural_features', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('outdoor_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('things_to_do', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('birding_wildlife', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('hunting_fishing_allowed', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('hunting_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('fishing_allowed', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('fishing_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('licenses_required', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('hunting_fishing_info', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('membership_passes', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('membership_details', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('associated_trails', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('camping_lodging', sa.Text(), nullable=True))
    op.add_column('trails', sa.Column('length_segments', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('trails', sa.Column('difficulty_description', sa.Text(), nullable=True))
    op.add_column('trails', sa.Column('trailhead_location', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('trails', sa.Column('trailhead_entrance_photo', sa.String(), nullable=True))
    op.add_column('trails', sa.Column('trailhead_exit_location', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('trails', sa.Column('trailhead_exit_photo', sa.String(), nullable=True))
    op.add_column('trails', sa.Column('trail_markings', sa.Text(), nullable=True))
    op.add_column('trails', sa.Column('trailhead_access_details', sa.Text(), nullable=True))
    op.add_column('trails', sa.Column('downloadable_trail_map', sa.String(), nullable=True))
    op.add_column('trails', sa.Column('trail_surfaces', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('trails', sa.Column('trail_conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('trails', sa.Column('trail_experiences', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('trails', 'trail_experiences')
    op.drop_column('trails', 'trail_conditions')
    op.drop_column('trails', 'trail_surfaces')
    op.drop_column('trails', 'downloadable_trail_map')
    op.drop_column('trails', 'trailhead_access_details')
    op.drop_column('trails', 'trail_markings')
    op.drop_column('trails', 'trailhead_exit_photo')
    op.drop_column('trails', 'trailhead_exit_location')
    op.drop_column('trails', 'trailhead_entrance_photo')
    op.drop_column('trails', 'trailhead_location')
    op.drop_column('trails', 'difficulty_description')
    op.drop_column('trails', 'length_segments')
    op.drop_column('points_of_interest', 'camping_lodging')
    op.drop_column('points_of_interest', 'associated_trails')
    op.drop_column('points_of_interest', 'membership_details')
    op.drop_column('points_of_interest', 'membership_passes')
    op.drop_column('points_of_interest', 'hunting_fishing_info')
    op.drop_column('points_of_interest', 'licenses_required')
    op.drop_column('points_of_interest', 'fishing_types')
    op.drop_column('points_of_interest', 'fishing_allowed')
    op.drop_column('points_of_interest', 'hunting_types')
    op.drop_column('points_of_interest', 'hunting_fishing_allowed')
    op.drop_column('points_of_interest', 'birding_wildlife')
    op.drop_column('points_of_interest', 'things_to_do')
    op.drop_column('points_of_interest', 'outdoor_types')
    op.drop_column('points_of_interest', 'natural_features')
    op.drop_column('points_of_interest', 'night_sky_viewing')
    op.drop_column('points_of_interest', 'payphone_location')
    op.drop_column('points_of_interest', 'playground_location')
    op.drop_column('points_of_interest', 'playground_photos')
    op.drop_column('points_of_interest', 'playground_notes')
    op.drop_column('points_of_interest', 'playground_surface_types')
    op.drop_column('points_of_interest', 'playground_types')
    op.drop_column('points_of_interest', 'playground_available')
    # ### end Alembic commands ###