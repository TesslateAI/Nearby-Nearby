"""Add social media, parking, amenities, and vendor fields

Revision ID: 2ca2f15a25ca
Revises: 604c6b25cd30
Create Date: 2025-08-18 23:31:09.519210

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ca2f15a25ca'
down_revision = '604c6b25cd30'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('organizer_name', sa.String(), nullable=True))
    op.add_column('events', sa.Column('food_and_drink_info', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('coat_check_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('events', sa.Column('has_vendors', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('vendor_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('events', sa.Column('vendor_application_deadline', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('events', sa.Column('vendor_application_info', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('vendor_fee', sa.String(), nullable=True))
    op.add_column('events', sa.Column('vendor_requirements', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('vendor_poi_links', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('instagram_username', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('facebook_username', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('x_username', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('tiktok_username', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('linkedin_username', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('other_socials', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('parking_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('parking_locations', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('parking_notes', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('parking_photos', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('public_transit_info', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('expect_to_pay_parking', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('downloadable_maps', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('payment_methods', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('key_facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('alcohol_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('wheelchair_accessible', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('wheelchair_details', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('smoking_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('smoking_details', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('wifi_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('drone_usage', sa.String(), nullable=True))
    op.add_column('points_of_interest', sa.Column('drone_policy', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('pet_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('pet_policy', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('public_toilets', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('toilet_locations', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('points_of_interest', sa.Column('toilet_description', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('available_for_rent', sa.Boolean(), nullable=True))
    op.add_column('points_of_interest', sa.Column('rental_info', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('rental_pricing', sa.Text(), nullable=True))
    op.add_column('points_of_interest', sa.Column('rental_link', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('points_of_interest', 'rental_link')
    op.drop_column('points_of_interest', 'rental_pricing')
    op.drop_column('points_of_interest', 'rental_info')
    op.drop_column('points_of_interest', 'available_for_rent')
    op.drop_column('points_of_interest', 'toilet_description')
    op.drop_column('points_of_interest', 'toilet_locations')
    op.drop_column('points_of_interest', 'public_toilets')
    op.drop_column('points_of_interest', 'pet_policy')
    op.drop_column('points_of_interest', 'pet_options')
    op.drop_column('points_of_interest', 'drone_policy')
    op.drop_column('points_of_interest', 'drone_usage')
    op.drop_column('points_of_interest', 'wifi_options')
    op.drop_column('points_of_interest', 'smoking_details')
    op.drop_column('points_of_interest', 'smoking_options')
    op.drop_column('points_of_interest', 'wheelchair_details')
    op.drop_column('points_of_interest', 'wheelchair_accessible')
    op.drop_column('points_of_interest', 'alcohol_options')
    op.drop_column('points_of_interest', 'key_facilities')
    op.drop_column('points_of_interest', 'payment_methods')
    op.drop_column('points_of_interest', 'downloadable_maps')
    op.drop_column('points_of_interest', 'expect_to_pay_parking')
    op.drop_column('points_of_interest', 'public_transit_info')
    op.drop_column('points_of_interest', 'parking_photos')
    op.drop_column('points_of_interest', 'parking_notes')
    op.drop_column('points_of_interest', 'parking_locations')
    op.drop_column('points_of_interest', 'parking_types')
    op.drop_column('points_of_interest', 'other_socials')
    op.drop_column('points_of_interest', 'linkedin_username')
    op.drop_column('points_of_interest', 'tiktok_username')
    op.drop_column('points_of_interest', 'x_username')
    op.drop_column('points_of_interest', 'facebook_username')
    op.drop_column('points_of_interest', 'instagram_username')
    op.drop_column('events', 'vendor_poi_links')
    op.drop_column('events', 'vendor_requirements')
    op.drop_column('events', 'vendor_fee')
    op.drop_column('events', 'vendor_application_info')
    op.drop_column('events', 'vendor_application_deadline')
    op.drop_column('events', 'vendor_types')
    op.drop_column('events', 'has_vendors')
    op.drop_column('events', 'coat_check_options')
    op.drop_column('events', 'food_and_drink_info')
    op.drop_column('events', 'organizer_name')
    # ### end Alembic commands ###