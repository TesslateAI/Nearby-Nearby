"""Initial migration with POI models

Revision ID: b931ba38f663
Revises: 
Create Date: 2025-06-14 15:45:18.426467

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision = 'b931ba38f663'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('address_line1', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state_abbr', sa.String(length=2), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('coordinates', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # FIX: Removed the redundant index creation. op.create_table handles this automatically for Geometry columns.
    # op.create_index('idx_locations_coordinates', 'locations', ['coordinates'], unique=False, postgresql_using='gist')
    op.create_table('points_of_interest',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('poi_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_points_of_interest_slug'), 'points_of_interest', ['slug'], unique=True)
    op.create_table('businesses',
    sa.Column('poi_id', sa.UUID(), nullable=False),
    sa.Column('price_range', sa.String(), nullable=True),
    sa.Column('amenities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ),
    sa.PrimaryKeyConstraint('poi_id')
    )
    op.create_table('events',
    sa.Column('poi_id', sa.UUID(), nullable=False),
    sa.Column('start_datetime', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_datetime', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('venue_poi_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ),
    sa.ForeignKeyConstraint(['venue_poi_id'], ['points_of_interest.id'], ),
    sa.PrimaryKeyConstraint('poi_id')
    )
    op.create_table('outdoors',
    sa.Column('poi_id', sa.UUID(), nullable=False),
    sa.Column('outdoor_specific_type', sa.String(), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('trail_length_km', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ),
    sa.PrimaryKeyConstraint('poi_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('outdoors')
    op.drop_table('events')
    op.drop_table('businesses')
    op.drop_index(op.f('ix_points_of_interest_slug'), table_name='points_of_interest')
    op.drop_table('points_of_interest')
    # Since the index is created implicitly with the table, it should also be dropped implicitly.
    # No explicit op.drop_index is needed here for 'idx_locations_coordinates'.
    op.drop_table('locations')
    # ### end Alembic commands ###